.border-dashed {
  position: relative;
  contain: paint;
  container-type: size; /* Enables container queries and units */
  border-style: none;
  overflow: hidden;

  --inline-full-width: 100cqi;
  --inline-full-height: 100cqb;

  /* Dynamic dimensions using container units */
  --effective-width: calc(var(--inline-full-width) - var(--border-width));
  --effective-height: calc(var(--inline-full-height) - var(--border-width));

  /* Use centerline radius so the strokeâ€™s outer edge matches the rounded box */
  --path-radius-raw: calc(var(--border-radius, 0rem) - (var(--border-width) / 2));
  --max-path-radius-x: calc(var(--effective-width) / 2);
  --max-path-radius-y: calc(var(--effective-height) / 2);
  --max-path-radius: min(var(--max-path-radius-x), var(--max-path-radius-y));
  --path-radius: clamp(0px, var(--path-radius-raw), var(--max-path-radius));

  /* Perimeter calculations */
  --straight-edges: calc(2 * (var(--effective-width) - 2 * var(--path-radius)) + 2 * (var(--effective-height) - 2 * var(--path-radius)));
  --circular-parts: calc(2 * pi * var(--path-radius));
  --total-perimeter: calc(var(--straight-edges) + var(--circular-parts));

  /* Dash count calculations */
  /* Unitless values through tan(atan2(value, 1px)) workaround */
  /* Reference: https://dev.to/janeori/css-type-casting-to-numeric-tanatan2-scalars-582j */
  --total-perimeter-unitless: tan(atan2(var(--total-perimeter), 1px));
  --dash-size-unitless: tan(atan2(var(--dash-size), 1px));
  --dash-count: round(down, calc(var(--total-perimeter-unitless) / (2 * var(--dash-size-unitless))), 1);

  /* Gap calculations */
  --total-dash-length: calc(var(--dash-count) * var(--dash-size));
  --total-gap-length: max(0px, calc(var(--total-perimeter) - var(--total-dash-length)));
  --gap-size: calc(var(--total-gap-length) / var(--dash-count));

  /* Cycle length calculations */
  --cycle-length: calc(var(--dash-size) + var(--gap-size));
}

.border-dashed {
  /* TODO: dynamic dash-size */
  /* TODO: account for 0px dash-size */
  --dash-size: 20px;
}

/* TODO: override other border-style variants */
/* TODO: add dotted border */
.border-dotted {
  /* TODO: dynamic gap-size */
  --dash-size: 0px;
}

/* TODO: fix Safari border shifted to the right */
.border-svg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.border-svg rect {
  x: calc(var(--border-width) / 2);
  y: calc(var(--border-width) / 2);
  width: calc(100% - var(--border-width));
  height: calc(100% - var(--border-width));
  rx: var(--path-radius);
  ry: var(--path-radius);

  fill: none;
  stroke: var(--border-color, #000);
  stroke-width: var(--border-width);
  stroke-linecap: var(--dash-stroke-linecap, round);
  stroke-dasharray: var(--dash-size) var(--gap-size);
  stroke-opacity: var(--border-opacity, 1);

  animation: var(--dash-animation, none);
}

@utility border-animate {
  /* TODO: dynamic direction, type, duration of animation */
  --dash-animation: dash-move var(--animation-duration, 1s) 
  var(--animation-timing-function, linear) var(--animation-iteration-count, infinite);
}

@keyframes dash-move {
  to {
      stroke-dashoffset: calc(-1 * var(--cycle-length));
  }
}

.border { --border-width: 1px; }
@utility border-* {
  --border-width: --value([length]);
  --border-width: calc(--value(number) * 1px);

  /* This doesn't work for border color classes like border-red-500 */
  --border-color: --value([color]);

  --border-opacity: clamp(0, calc(--modifier(number) / 100), 1);
  --border-opacity: clamp(0, calc(--modifier([number]) / 1), 1);
}
/* TODO: account for border-width variants */

/* Dash Linecap */
.dash-round { --dash-stroke-linecap: round; }
.dash-butt { --dash-stroke-linecap: butt; }
.dash-square { --dash-stroke-linecap: square; }

/* Border Radius */
.rounded-xs   { --border-radius: var(--radius-xs, 0.125rem); }
.rounded-sm   { --border-radius: var(--radius-sm, 0.25rem); }
.rounded-md   { --border-radius: var(--radius-md, 0.375rem); }
.rounded-lg   { --border-radius: var(--radius-lg, 0.5rem); }
.rounded-xl   { --border-radius: var(--radius-xl, 0.75rem); }
.rounded-2xl  { --border-radius: var(--radius-2xl, 1rem); }
.rounded-3xl  { --border-radius: var(--radius-3xl, 1.5rem); }
.rounded-4xl  { --border-radius: var(--radius-4xl, 2rem); }
.rounded      { --border-radius: 0.25rem; }
.rounded-none { --border-radius: 0rem; }
.rounded-full { --border-radius: 9999px; }
@utility rounded-* {
  --border-radius: --value([length]);
}
/* TODO: account for border-radius variants */