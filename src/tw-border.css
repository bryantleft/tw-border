/* Border Style */
/* TODO: override other border-style variants */
.border-dashed {
  position: relative;
  contain: paint;
  container-type: size; /* Enables container queries and units */
  border-style: none;
  overflow: hidden;

  /* TODO: dynamic dash-size */
  --dash-size: 20px;
  /* TODO: dynamic dash-count */
  --dash-count: 15;
}

.border-svg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;

  /* Dynamic dimensions using container units */
  --effective-width: calc(100cqi - var(--border-width));
  --effective-height: calc(100cqb - var(--border-width));

  /* Use centerline radius (border-radius - border-width/2) so the strokeâ€™s outer edge matches the rounded box; clamp to avoid gaps or overshoot. */
  --path-radius-raw: calc(var(--border-radius) - (var(--border-width) / 2));
  --max-path-radius-x: calc(var(--effective-width) / 2);
  --max-path-radius-y: calc(var(--effective-height) / 2);
  --max-path-radius: min(var(--max-path-radius-x), var(--max-path-radius-y));
  --path-radius: clamp(0px, var(--path-radius-raw), var(--max-path-radius));

  /* Perimeter calculations */
  --straight-edges: calc(2 * (var(--effective-width) - 2 * var(--path-radius)) + 2 * (var(--effective-height) - 2 * var(--path-radius)));
  --circular-parts: calc(2 * pi * var(--path-radius));
  --total-perimeter: calc(var(--straight-edges) + var(--circular-parts));

  /* Gap calculations */
  --total-dash-length: calc(var(--dash-count) * var(--dash-size));
  --total-gap-length: max(0px, calc(var(--total-perimeter) - var(--total-dash-length)));
  --gap-size: calc(var(--total-gap-length) / var(--dash-count));

  /* Cycle length calculations */
  --cycle-length: calc(var(--dash-size) + var(--gap-size));
}

.border-svg rect {
  x: calc(var(--border-width) / 2);
  y: calc(var(--border-width) / 2);
  width: calc(100% - var(--border-width));
  height: calc(100% - var(--border-width));
  rx: var(--path-radius);
  ry: var(--path-radius);

  fill: none;
  /* TODO: dynamic border-color */
  stroke: var(--border-color, #000);
  stroke-width: var(--border-width);
  /* TODO: dynamic stroke-linecap */
  stroke-linecap: var(--stroke-linecap, round);
  stroke-dasharray: var(--dash-size) var(--gap-size);
}

.border-animate .border-svg rect {
  /* TODO: dynamic direction, type, duration of animation */
  animation: dash-move var(--animation-duration, 1s) var(--animation-timing-function, linear) var(--animation-iteration-count, infinite);
}

@keyframes dash-move {
  to {
      stroke-dashoffset: calc(-1 * var(--cycle-length));
  }
}

/* TODO: add container queries for different widths and heights */
@container (min-width: 201px) {
  .border-svg {
      --dash-count: 32;
  }
}

@container (min-width: 351px) {
  .border-svg {
      --dash-count: 48;
  }
}

/* Border Width */
.border { --border-width: 1px; }
@utility border-* {
  --border-width: calc(--value(number) * 1px);
  --border-width: --value([length], "initial", [*]);
}
/* TODO: account for border-width variants */

/* Border Radius */
.rounded      { --border-radius: var(--radius-xs, 0.25rem); }
.rounded-sm   { --border-radius: var(--radius-sm, 0.125rem); }
.rounded-md   { --border-radius: var(--radius-md, 0.375rem); }
.rounded-lg   { --border-radius: var(--radius-lg, 0.5rem); }
.rounded-xl   { --border-radius: var(--radius-xl, 0.75rem); }
.rounded-2xl  { --border-radius: var(--radius-2xl, 1rem); }
.rounded-3xl  { --border-radius: var(--radius-3xl, 1.5rem); }
.rounded-4xl  { --border-radius: var(--radius-4xl, 2rem); }
.rounded-none { --border-radius: 0; }
.rounded-full { --border-radius: var(--radius-full, 9999px); }
/* TODO: account for border-radius variants */
